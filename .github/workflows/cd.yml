name: CD


on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  workflow_dispatch:


jobs:
  build-and-push:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (
        github.event.workflow_run.conclusion == 'success' &&
        github.event.workflow_run.event != 'pull_request'
      )
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine branch source
        id: branch-source
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            BRANCH_NAME="${{ github.ref_name }}"
          else
            BRANCH_NAME="${{ github.event.workflow_run.head_branch }}"
          fi

          SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | tr -cd '[:alnum:]_.-/' | tr '/' '-')
          
          echo "sanitized_branch=$SANITIZED_BRANCH" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.API_TESTS_IMAGE }}:${{ steps.branch-source.outputs.sanitized_branch }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.API_TESTS_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.API_TESTS_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.API_TESTS_IMAGE }}:buildcache,mode=max
